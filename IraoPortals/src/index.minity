namespace irao_portals

import "./tags_scores.minity"
import "./tp_marker.minity"

tag iraoPortal
tag placedPortal
tag iraoPortalMarker
tag iraoPortalLinker

// Recipes
function recipe() {
  give @p painting{
    display: {
      Name: json <span color=aqua>Irao Portal</span>,
    },
    EntityTag: {
      Tags:["{.iraoPortal}"],
    }
  }
  /clear @s minecraft:knowledge_book 1
}

function linker_recipe() {
  give @p carrot_on_a_stick{
    display: {
      Name: json <span color=aqua><b>Irao Portal Linker</b></span>,
    },
    EntityTag: {
      Tags:["{.iraoPortalLinker}"],
    },
    Enchantments: [
      {
        id:"minecraft:binding_curse",
        lvl:1s,
      }
    ]
  }
  /clear @s minecraft:knowledge_book 1
}

function place_portal() {
  tag @s placedPortal

  var $rotx
  $rotx = @s::Rotation[0]
  var $roty
  $roty = @s::Rotation[1]

  // save portal info
  summon (forward 0.5) marker{
    // do nothing
  } then {
    tag @s iraoPortalMarker
    @s->portalid = -1
    @s->player = 0
    forward 1 {
      /tp @s ~ ~ ~
      @s->posicaox = @s::Pos[0]
      @s->posicaoy = @s::Pos[1]
      @s->posicaoz = @s::Pos[2]
    }
    /tp @s ~ ~ ~
    @s::Rotation[0] = 1f * $rotx
    @s->rotx = @s::Rotation[0]
    @s::Rotation[1] = 1f * $roty
    @s->roty = @s::Rotation[1]
  }
}

function destroy_portal() {
  unless @painting.iraoPortal[distance < 1] {
    // kill painting drop
    /kill @e[type=minecraft:item,nbt={Item:{id:"minecraft:painting"}},sort=nearest,limit=1]
    // drop item
    summon (forward 0.5 downward 0.5) item{
      Item: {
        id: "minecraft:painting",
        Count: 1b,
        tag: {
          display: {
            Name: json <span color=aqua>Irao Portal</span>,
          },
          EntityTag: {
            Tags:["{.iraoPortal}"],
          }
        }
      }
    }
    /kill @s
  }
}

// Detect player dimension
function detect_dim() {
  // The lines below could work, but for some reason the overworld and the_end conflict with each other.
  // A player in the overworld is detected as both in the overworld and in the_end
  // /execute in minecraft:overworld if entity @s[distance=0] run function irao_portals:store_dimension_overworld
  // /execute in minecraft:the_nether if entity @s[distance=0] run function irao_portals:store_dimension_nether
  // /execute in minecraft:the_end if entity @s[distance=0] run function irao_portals:store_dimension_end
  // This other command stores the dimension ID length in the scoreboard
  // 17 - the_end
  // 19 - overworld
  // 20 - the_nether

  /execute store result score @s {->dimension} run data get entity @s Dimension
}

function handle_link() {
  var $seq
  $seq = @s->portalseq
  var $playerid
  $playerid = @s->id

  var $posx
  var $posy
  var $posz
  var $rotx
  var $roty
  var $dim

  var $found
  $found = 0

  if (@s->parity == 0) {
    // first portal

    for nearest @marker.iraoPortalMarker[distance < 3][->portalid < 0] {
      $found = 1
      /particle minecraft:happy_villager ~ ~ ~ 0.3 0.3 0.3 0.5 10 normal
      /playsound minecraft:block.amethyst_block.break master @a[distance=0..10]

      $posx = @s->posicaox
      $posy = @s->posicaoy
      $posz = @s->posicaoz
      $rotx = @s->rotx
      $roty = @s->roty

      @s->portalid = $seq
      @s->player = $playerid
    }

    if ($found == 1) {
      // found a portal
      @s->parity = 1

      @s->posicaox = $posx
      @s->posicaoy = $posy
      @s->posicaoz = $posz
      @s->rotx = $rotx
      @s->roty = $roty

      // save player current dimension
      detect_dim()
    }
  } else {
    if (@s->parity == 1) {
      // second portal
      $posx = @s->posicaox
      $posy = @s->posicaoy
      $posz = @s->posicaoz
      $rotx = @s->rotx
      $roty = @s->roty
      $dim = @s->dimension

      for nearest @marker.iraoPortalMarker[distance < 3][->portalid < 0] {
        $found = 1
        /particle minecraft:portal ~ ~ ~ 0 0 0 1 500 normal
        /playsound minecraft:item.totem.use master @a[distance=0..10]

        var $temp

        $temp = @s->posicaox
        @s->posicaox = $posx
        $posx = $temp
        $temp = @s->posicaoy
        @s->posicaoy = $posy
        $posy = $temp
        $temp = @s->posicaoz
        @s->posicaoz = $posz
        $posz = $temp
        $temp = @s->rotx
        @s->rotx = $rotx
        $rotx = $temp
        $temp = @s->roty
        @s->roty = $roty
        $roty = $temp

        @s->dimension = $dim

        @s->portalid = $seq
        @s->player = $playerid
      }

      if ($found == 1) {
        // found a portal
        @s->parity = 2

        @s->posicaox = $posx
        @s->posicaoy = $posy
        @s->posicaoz = $posz
        @s->rotx = $rotx
        @s->roty = $roty

        // save player current dimension
        detect_dim()
      }
    } else {
      // final binding
      $posx = @s->posicaox
      $posy = @s->posicaoy
      $posz = @s->posicaoz
      $rotx = @s->rotx
      $roty = @s->roty
      $dim = @s->dimension

      for nearest @marker.iraoPortalMarker[distance < 3] {
        if (@s->portalid == $seq) and if (@s->player == $playerid) {
          $found = 1
          /particle minecraft:portal ~ ~ ~ 0 0 0 1 500 normal
          /playsound minecraft:item.totem.use master @a[distance=0..10]

          @s->posicaox = $posx
          @s->posicaoy = $posy
          @s->posicaoz = $posz
          @s->rotx = $rotx
          @s->roty = $roty
          @s->dimension = $dim
        }
      }

      if ($found == 1) {
        // found a portal
        @s->parity = 0
        @s->portalseq += 1
      }
    }
  }

  @s->clickdetect = 0
}

// Load
function load #minecraft:load {
  // load all unloaded players scoreboards
  @a->id += 0
  // TODO move to a setup func
  /scoreboard players set $total {->id} 1
  @a->portalseq += 0
  @a->parity += 0
  @a->clickdetect = 0

  /tellraw @a [{"text": "[IraoPortals]: yellow"}]
}

// Tick
function loop #minecraft:tick {
  // uniquely identify all users
  for @a[->id = 0] {
    /scoreboard players operation @s {->id} = $total {->id}
    /scoreboard players add $total {->id} 1
  }

  // reset recipes
  /recipe take @a irao_portals:iraoportalrecipe
  /advancement revoke @a only irao_portals:iraoportalrecipeadv
  
  // create markers for placed portals
  for @painting.iraoPortal!placedPortal {
    place_portal()
  }

  // check for portal destruction and player collision
  for @marker.iraoPortalMarker {
    destroy_portal()
    teleport_player()
  }

  // portal linkage
  for @a[->clickdetect > 0]{SelectedItem:{id:"minecraft:carrot_on_a_stick",tag:{EntityTag:{Tags:["{.iraoPortalLinker}"]}}}} {
    if (@s->sneaking > 0) {
      @s->parity = 0
    } else {
      handle_link()
      if (@s->parity == 0) {
        /item replace entity @s weapon.mainhand with carrot_on_a_stick{display:{Name:'{"text":"Irao Portal Linker","color":"aqua","bold":true}'},Enchantments:[{id:"minecraft:binding_curse",lvl:1s}],EntityTag:{Tags:[{.iraoPortalLinker}]}}
      } else {
        if (@s->parity == 1) {
          /item replace entity @s weapon.mainhand with carrot_on_a_stick{display:{Name:'{"text":"Irao Portal Linker I","color":"aqua","bold":true}'},Enchantments:[{id:"minecraft:binding_curse",lvl:1s}],EntityTag:{Tags:[{.iraoPortalLinker}]}}
        } else {
          /item replace entity @s weapon.mainhand with carrot_on_a_stick{display:{Name:'{"text":"Irao Portal Linker II","color":"aqua","bold":true}'},Enchantments:[{id:"minecraft:binding_curse",lvl:1s}],EntityTag:{Tags:[{.iraoPortalLinker}]}}
        }
      }
    }
  }
  // reset sneak detector
  @a->sneaking = 0
}
