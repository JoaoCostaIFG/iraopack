namespace irao_portals

tag iraoPortal
tag placedPortal
tag iraoPortalMarker
tag iraoPortalLinker

// player scores
score id
score portalseq
score parity
score clickdetect minecraft.used:minecraft.carrot_on_a_stick
score sneaking minecraft.custom:minecraft.sneak_time

score portalid
score player
score posicaox
score posicaoy
score posicaoz
score rotx
score roty

// Recipes
function recipe() {
  give @p painting{
    display: {
      Name: json <span color=aqua>Irao Portal</span>,
    },
    EntityTag: {
      Tags:["{.iraoPortal}"],
    }
  }
  /clear @s minecraft:knowledge_book 1
}

function linker_recipe() {
  give @p carrot_on_a_stick{
    display: {
      Name: json <span color=aqua><b>Irao Portal Linker</b></span>,
    },
    EntityTag: {
      Tags:["{.iraoPortalLinker}"],
    },
    Enchantments: [
      {
        id:"minecraft:binding_curse",
        lvl:1s,
      }
    ]
  }
  /clear @s minecraft:knowledge_book 1
}

function place_portal() {
  say Placing portal
  tag @s placedPortal

  var $rotx
  $rotx = @s::Rotation[0]
  var $roty
  $roty = @s::Rotation[1]

  // save portal info
  summon (forward 0.5) marker{
    // do nothing
  } then {
    tag @s iraoPortalMarker
    @s->portalid = -1
    @s->player = 0
    forward 1 {
      /tp @s ~ ~ ~
      @s->posicaox = @s::Pos[0]
      @s->posicaoy = @s::Pos[1]
      @s->posicaoz = @s::Pos[2]
    }
    /tp @s ~ ~ ~
    @s::Rotation[0] = 1f * $rotx
    @s->rotx = @s::Rotation[0]
    @s::Rotation[1] = 1f * $roty
    @s->roty = @s::Rotation[1]
  }

  say Placed portal
}

function destroy_portal() {
  unless @painting.iraoPortal[distance < 1] {
    say Portal died
    // kill painting drop
    /kill @e[type=minecraft:item,nbt={Item:{id:"minecraft:painting"}},sort=nearest,limit=1]
    // drop item
    summon (forward 0.5 downward 0.5) item{
      Item: {
        id: "minecraft:painting",
        Count: 1b,
        tag: {
          display: {
            Name: json <span color=aqua>Irao Portal</span>,
          },
          EntityTag: {
            Tags:["{.iraoPortal}"],
          }
        }
      }
    }
    /kill @s
  }
}

function teleport_player() {
  if (@s->portalid > 0) {
    var $posx
    $posx = @s->posicaox
    var $posy
    $posy = @s->posicaoy
    var $posz
    $posz = @s->posicaoz
    var $rotx
    $rotx = @s->rotx
    var $roty
    $roty = @s->roty

    // for each neaby player
    for @p[distance <= 1] {
      say looking for pair teleporter
      /tag @s add TeleportPlayer
      summon marker{
        Tags:["TeleportTarget"],
      } then {
        @s::Pos[0] = 1d * $posx
        @s::Pos[1] = 1d * $posy
        @s::Pos[2] = 1d * $posz
        @s::Rotation[0] = 1f * $rotx
        @s::Rotation[1] = 1f * $roty
        /tp @a[tag=TeleportPlayer, limit=1] @s
        /tag @a[tag=TeleportPlayer, limit=1] remove TeleportPlayer
        /kill @s
      }
    }
  }
}

function handle_link() {
  var $seq
  $seq = @s->portalseq
  var $playerid
  $playerid = @s->id

  var $posx
  var $posy
  var $posz
  var $rotx
  var $roty

  var $found
  $found = 0

  if (@s->parity == 0) {
    // first portal
    say looking for portal 0
    for nearest @marker.iraoPortalMarker[distance < 3][->portalid < 0] {
      $found = 1

      $posx = @s->posicaox
      $posy = @s->posicaoy
      $posz = @s->posicaoz
      $rotx = @s->rotx
      $roty = @s->roty

      @s->portalid = $seq
      @s->player = $playerid
    }

    if ($found == 1) {
      // found a portal
      say found a portal 1
      @s->posicaox = $posx
      @s->posicaoy = $posy
      @s->posicaoz = $posz
      @s->rotx = $rotx
      @s->roty = $roty

      @s->parity = 1
    }
  } else {
    if (@s->parity == 1) {
      // second portal
      say looking for portal 1
      $posx = @s->posicaox
      $posy = @s->posicaoy
      $posz = @s->posicaoz
      $rotx = @s->rotx
      $roty = @s->roty

      for nearest @marker.iraoPortalMarker[distance < 3][->portalid < 0] {
        $found = 1
        var $temp

        $temp = @s->posicaox
        @s->posicaox = $posx
        $posx = $temp
        $temp = @s->posicaoy
        @s->posicaoy = $posy
        $posy = $temp
        $temp = @s->posicaoz
        @s->posicaoz = $posz
        $posz = $temp
        $temp = @s->rotx
        @s->rotx = $rotx
        $rotx = $temp
        $temp = @s->roty
        @s->roty = $roty
        $roty = $temp

        @s->portalid = $seq
        @s->player = $playerid
      }

      if ($found == 1) {
        // found a portal
        say found a portal 2
        @s->posicaox = $posx
        @s->posicaoy = $posy
        @s->posicaoz = $posz
        @s->rotx = $rotx
        @s->roty = $roty

        @s->parity = 2
      }
    } else {
      // final binding
      say looking for portal 2

      $posx = @s->posicaox
      $posy = @s->posicaoy
      $posz = @s->posicaoz
      $rotx = @s->rotx
      $roty = @s->roty

      for nearest @marker.iraoPortalMarker[distance < 3] {
        if (@s->portalid == $seq) and if (@s->player == $playerid) {
          $found = 1

          @s->posicaox = $posx
          @s->posicaoy = $posy
          @s->posicaoz = $posz
          @s->rotx = $rotx
          @s->roty = $roty
        }
      }

      if ($found == 1) {
        // found a portal
        say found portal 3

        @s->portalseq += 1
        @s->parity = 0
      }
    }
  }

  @s->clickdetect = 0
}

// Load
function load #minecraft:load {
  // load all unloaded players scoreboards
  @a->id += 0
  // TODO move to a setup func
  /scoreboard players set $total {->id} 1
  @a->portalseq += 0
  @a->parity += 0
  @a->clickdetect = 0

  /tellraw @a [{"text": "[IraoPortals]: yellow"}]
}

// Tick
function loop #minecraft:tick {
  // uniquely identify all users
  for @a[->id = 0] {
    say changing
    /scoreboard players operation @s {->id} = $total {->id}
    /scoreboard players add $total {->id} 1
  }

  // reset recipes
  /recipe take @a irao_portals:iraoportalrecipe
  /advancement revoke @a only irao_portals:iraoportalrecipeadv
  
  // create markers for placed portals
  for @painting.iraoPortal!placedPortal {
    place_portal()
  }

  // check for portal destruction and player collision
  for @marker.iraoPortalMarker {
    destroy_portal()
    teleport_player()
  }

  // portal linkage
  for @a[->clickdetect > 0]{SelectedItem:{id:"minecraft:carrot_on_a_stick",tag:{EntityTag:{Tags:["{.iraoPortalLinker}"]}}}} {
    if (@s->sneaking > 0) {
      say resetting
      @s->parity = 0
    } else {
      handle_link()
      if (@s->parity == 0) {
        /item replace entity @s weapon.mainhand with carrot_on_a_stick{display:{Name:'{"text":"Irao Portal Linker","color":"aqua","bold":true}'},Enchantments:[{id:"minecraft:binding_curse",lvl:1s}],EntityTag:{Tags:[{.iraoPortalLinker}]}}
      } else {
        if (@s->parity == 1) {
          /item replace entity @s weapon.mainhand with carrot_on_a_stick{display:{Name:'{"text":"Irao Portal Linker I","color":"aqua","bold":true}'},Enchantments:[{id:"minecraft:binding_curse",lvl:1s}],EntityTag:{Tags:[{.iraoPortalLinker}]}}
        } else {
          /item replace entity @s weapon.mainhand with carrot_on_a_stick{display:{Name:'{"text":"Irao Portal Linker II","color":"aqua","bold":true}'},Enchantments:[{id:"minecraft:binding_curse",lvl:1s}],EntityTag:{Tags:[{.iraoPortalLinker}]}}
        }
    }
    }
  }
  // reset sneak detector
  @a->sneaking = 0
}
